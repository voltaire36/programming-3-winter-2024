// <auto-generated />
using System;
using DataAccessLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLibrary.Migrations
{
    [DbContext(typeof(OmsContext))]
    partial class OmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccessLibrary.Models.Basket", b =>
                {
                    b.Property<int>("IdBasket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBasket"), 1L, 1);

                    b.Property<int>("IdShopper")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(7,2)");

                    b.HasKey("IdBasket");

                    b.HasIndex("IdShopper");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.BasketItem", b =>
                {
                    b.Property<int>("IdBasketItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBasketItem"), 1L, 1);

                    b.Property<int>("IdBasket")
                        .HasColumnType("int");

                    b.Property<short>("IdProduct")
                        .HasColumnType("smallint");

                    b.Property<byte>("Quantity")
                        .HasColumnType("tinyint");

                    b.HasKey("IdBasketItem");

                    b.HasIndex("IdBasket");

                    b.HasIndex("IdProduct");

                    b.ToTable("BasketItems");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Product", b =>
                {
                    b.Property<short>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("IdProduct"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduct");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Shopper", b =>
                {
                    b.Property<int>("IdShopper")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdShopper"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdShopper");

                    b.ToTable("Shoppers");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Basket", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Shopper", "Shopper")
                        .WithMany("Baskets")
                        .HasForeignKey("IdShopper")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shopper");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.BasketItem", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Basket", "Basket")
                        .WithMany("BasketItems")
                        .HasForeignKey("IdBasket")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLibrary.Models.Product", "Product")
                        .WithMany("BasketItems")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Basket", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Product", b =>
                {
                    b.Navigation("BasketItems");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Shopper", b =>
                {
                    b.Navigation("Baskets");
                });
#pragma warning restore 612, 618
        }
    }
}
